import pygame
from pygame.locals import *
from random import *

# O CODIGO DEVERÁ SOFRER ALTERAÇÕES APÓS DECIDIR OS SPRITES 

cores_plataforma = {'verde': (0,255,0),
                    'vermelho': (255,0,0),
                    'azul': (0,0,255),
                    'branco': (255,255,255),
                    'cinza':(128,128,128),
                    'amarelo':(255,215,0),
                    'cores totais': ['verde', 'vermelho', 'azul', 'branco']}

#CLASSE 

class plataforma:
    
    def __init__(self, X, Y, L, cor, i):
        self.X = X
        self.Y = Y
        self.L = L
        self.velocidade = 2
        self.cor = cor
        self.velocida_condition = True if cor == cores_plataforma['azul'] else False
        self.vermelho =True if cor == cores_plataforma['vermelho'] else False
        
        

    def desenhar(self,TELA):
        return pygame.draw.rect(TELA, self.cor, (self.X, self.Y, self.L, 20))
    #parte de colocar o item
    

    def mover_azul(self, LARGURA):
        if self.velocida_condition:
            self.X += self.velocidade
            if self.X > LARGURA - self.L or self.X < 0:
                self.velocidade *= -1

    def sumir_vermelho(self, player, plataforma):
        if self.vermelho:
            if player.colliderect(plataforma):
                return True
    
    def get_cor(self):
        return self.cor
    

class item:
    def __init__(self, X, Y, L, cor, i):
        self.X = X
        self.Y = Y
        self.L = L
        self.velocidade = 2
        self.cor = cor
        self.velocida_condition = True if cor == cores_plataforma['azul'] else False
        #parte do item
        self.mola = True if cor == cores_plataforma['branco'] else False
        item = randint(1, 200)
        self.moeda =0 if item <= 100 and i !=0 else 1 if 100 < item <= 170 and i !=0 else 2 if 170 < item <= 190 and i !=0 else 3 if i!=0 else None

    def desenho(self,TELA):
        if self.mola:
            return pygame.draw.rect(TELA, cores_plataforma['cinza'], (self.X + 42.5, self.Y - 15, 15, 15))
        elif self.moeda == 1:
            return pygame.draw.circle(TELA, cores_plataforma['amarelo'], (self.X + 50, self.Y - 10), 10)
        elif self.moeda == 2:
            return pygame.draw.circle(TELA, cores_plataforma['vermelho'], (self.X + 50, self.Y - 10), 10)
        elif self.moeda == 3:
            return pygame.draw.circle(TELA, cores_plataforma['verde'], (self.X + 50, self.Y - 10), 10)
    
    def mover_item(self, LARGURA):
        if self.velocida_condition:
            self.X += self.velocidade
            if self.X > LARGURA - self.L or self.X < 0:
                self.velocidade *= -1

    def cor(self):
        return self.cor
# FUNÇÕES

def gerar_plataformas(MAX_PLATAFORMAS):
    PLATAFORMAS = []
    for p in range (0,MAX_PLATAFORMAS):
        plataforma_aleatoria = choice(cores_plataforma['cores totais'])   
        PLATAFORMAS.append(plataforma_aleatoria)
    return PLATAFORMAS

def construir_mapa(LISTA_PLATAFORMAS,LARGURA,TELA):
    plataformas =[]
    plataformas_aux = []
    itens = []
    P_Y = ALTURA -30
    for i,p in enumerate(LISTA_PLATAFORMAS):
        P_L = 100
        P_X = randint(0, LARGURA-110)
        if i == 0:
            cor = cores_plataforma['verde']
        else:
            cor = cores_plataforma[p]
        plataform = plataforma(P_X,P_Y,P_L, cor,i)
        plataform_cor = plataform.desenhar(TELA)
        plataformas.append(plataform)
        plataformas_aux.append(plataform_cor)
        ite = item(P_X,P_Y,P_L, cor,i)
        itens.append(ite)
        P_Y -= 30 + randint(30, 150)
    return plataformas, plataformas_aux, itens 
        

# AREA DE TESTES RETIRAR QUANDO O CÓDIGO FOR FINALIZADO

LARGURA = 600
ALTURA = 800
FPS = 60
pygame.init()
TELA = pygame.display.set_mode((LARGURA, ALTURA))
clock = pygame.time.Clock()

MAX_PLATAFORMAS = 20

plataformas = gerar_plataformas(MAX_PLATAFORMAS)
plataformas,plataformas_aux, itens = construir_mapa(plataformas, LARGURA, TELA)

PLAYER = (254,254,0)
X_PLAYER = plataformas_aux[0][0] + 40
Y_PLAYER = plataformas_aux[0][1] - 20
rodar = True
while rodar:
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            rodar = False
        if pygame.key.get_pressed()[K_ESCAPE]:
            rodar = False    
    
    TELA.fill((0, 0, 0))    
    
    if pygame.key.get_pressed()[K_a]:
        X_PLAYER = X_PLAYER - 10
    if pygame.key.get_pressed()[K_d]:
        X_PLAYER = X_PLAYER + 10
    if pygame.key.get_pressed()[K_w]:
        Y_PLAYER = Y_PLAYER - 10
    if pygame.key.get_pressed()[K_s]:
        Y_PLAYER = Y_PLAYER + 10
    
    R_PLAYER = pygame.draw.rect(TELA, PLAYER, (X_PLAYER, Y_PLAYER, 20, 20))
    
    
    
    for plataforma,plataforma_aux,item, i in zip(plataformas,plataformas_aux, itens,range(len(plataformas))):
        if plataforma.get_cor() == cores_plataforma['vermelho']:
            if plataforma.sumir_vermelho(R_PLAYER, plataforma_aux):
                plataformas_aux.pop(i)
                plataformas.pop(i)
        plataforma.mover_azul(LARGURA) 
        plataforma.desenhar(TELA)  
        item.desenho(TELA)
        item.mover_item(LARGURA)
    
    pygame.display.update()
    clock.tick(FPS)
pygame.quit()
